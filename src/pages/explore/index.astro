---
import { Image } from 'astro:assets'
import Layout from '@/layouts/Layout.astro'
import { ExplorePage } from '@/components/Explore/Explore'
import { Search as SearchIcon } from 'lucide-astro'
import {
  getMovieGenres,
  getTrending,
  getTvShowGenres,
  multiSearch,
} from '@/utils/tmdb'
import { getImagePath } from '@/utils'
import type { MovieWithMediaType } from 'tmdb-ts'

const query = Astro.url.searchParams.get('q') ?? ''

const [searchData, trendingResults, movieGenres, tvShowGenres] =
  await Promise.all([
    query ? multiSearch(query) : null,
    getTrending('all'),
    getMovieGenres(),
    getTvShowGenres(),
  ])

const trendingMovies = trendingResults.results
  .filter((movie): movie is MovieWithMediaType => movie.media_type === 'movie')
  .sort((a, b) => b.vote_average - a.vote_average)

const data = trendingMovies[0]

const uniqueGenres = Array.from(
  new Map(
    [...movieGenres.genres, ...tvShowGenres.genres].map(genre => [
      genre.name,
      genre,
    ])
  ).values()
)
---

<Layout
  title='Wovie - Watch Movies & TV Shows Free'
  description='Discover new movies and tv shows'
  image='https://wovie.vercel.app/og.png'
>
  <div class='min-h-svh p-4 pt-20 sm:p-12 sm:pt-20'>
    <div id='opacity-layer' class='pointer-events-none !fixed !inset-0 -z-[1]'>
    </div>
    {
      data && (
        <Image
          width='1280'
          height='720'
          src={getImagePath(data.backdrop_path, 'w300')}
          alt={data.title}
          class='fixed inset-0 -z-[10] aspect-video h-svh w-full object-cover blur'
        />
      )
    }
    <ExplorePage
      client:idle
      query={query}
      trending={trendingResults.results}
      searchData={searchData?.results}
      genres={uniqueGenres}
    >
      <SearchIcon width='24' height='24' stroke='#9c9c9c' />
    </ExplorePage>
  </div>
</Layout>

<style is:global>
  :root {
    --discover-space: 1rem;
  }
</style>

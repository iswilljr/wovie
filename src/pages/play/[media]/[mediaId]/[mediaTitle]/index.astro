---
import { MediaGrid } from '@/components/Media/MediaGrid'
import PlayMediaCard from '@/components/Media/PlayMediaCard.astro'
import SelectSource from '@/components/Player/SelectSource'
import TVShowPlayer from '@/components/Player/TVShowPlayer.astro'
import Layout from '@/layouts/Layout.astro'
import { getImagePath, getSeasonOrEpisode } from '@/utils'
import { getMovieUrl, getSource } from '@/utils/sources'
import { getMovie, getSeasonDetails, getTVShow } from '@/utils/tmdb'
import { Image } from 'astro:assets'

const { media, mediaId } = Astro.params
const id = +(mediaId ?? 0)

if (media !== 'tv' && media !== 'movie') return Astro.redirect('/')

const season = getSeasonOrEpisode(Astro.url.searchParams.get('season'))
const episode = getSeasonOrEpisode(Astro.url.searchParams.get('episode'))

let result:
  | Awaited<ReturnType<typeof getMovie>>
  | Awaited<ReturnType<typeof getTVShow>>
  | null = null

let seasonDetails: Awaited<ReturnType<typeof getSeasonDetails>> | null = null

if (media === 'movie') {
  result = await getMovie(id).catch(() => null)
}

if (media === 'tv') {
  const [tvShow, tvShowSeason] = await Promise.all([
    getTVShow(id).catch(() => null),
    getSeasonDetails(id, season).catch(() => null),
  ])
  result = tvShow
  seasonDetails = tvShowSeason
}

if (!result) {
  return Astro.redirect('/')
}

const isTV = result.media_type === 'tv'

const currentSource = getSource(Astro.url.searchParams.get('source'))
const iframeUrl = getMovieUrl(currentSource.id, id)

const mediaTitle =
  result.media_type === 'tv'
    ? `${result.name} S${season}E${episode}`
    : result.title
const mediaCardTitle = result.media_type === 'tv' ? result.name : result.title

const mediaDetails = {
  season,
  episode,
  mediaType: result.media_type,
  mediaId: result.id,
  sourceId: currentSource.id,
}

Astro.response.headers.set(
  'Cache-Control',
  'public, s-maxage=60, stale-while-revalidate=30'
)
---

<Layout
  noIndex
  title={`${mediaTitle} | Wovie`}
  description={`Watch ${mediaTitle} on Wovie. ${result.overview}`}
  image={getImagePath(result.backdrop_path, 'w1280')}
>
  <div class='min-h-svh p-4 pt-20 sm:p-12 sm:pt-28'>
    <div id='opacity-layer' class='pointer-events-none !fixed !inset-0 -z-[1]'>
    </div>
    <Image
      width='1280'
      height='720'
      src={getImagePath(result.backdrop_path, 'w300')}
      alt={mediaTitle}
      class='fixed inset-0 -z-[10] aspect-video h-svh w-full object-cover blur'
    />
    <div
      class:list={['z-20 mx-auto space-y-4', isTV ? 'max-w-7xl' : 'max-w-5xl']}
    >
      <div class='mx-auto flex w-full justify-between px-3 text-gray-300'>
        <div class='flex w-full items-center gap-2'>
          <a class='shrink-0 hover:underline' href='/'>Home</a>
          <span class='pointer-events-none select-none'>/</span>
          <p class='shrink-0 cursor-default'>{isTV ? 'Show' : 'Movie'}</p>
          <span class='pointer-events-none select-none'>/</span>
          <p class='line-clamp-1 cursor-default text-primary-400'>
            {mediaCardTitle}
          </p>
        </div>
      </div>
      {
        result.media_type === 'tv' ? (
          <TVShowPlayer result={result} seasonDetails={seasonDetails!} />
        ) : (
          <div class='space-y-4'>
            <div class='aspect-video w-full flex-grow rounded-2xl bg-white/10 shadow-2xl'>
              <iframe
                title={mediaTitle}
                class='aspect-video w-full rounded-2xl bg-transparent'
                allowfullscreen
                src={iframeUrl}
              />
            </div>
            <SelectSource
              client:idle
              currentURL={Astro.url.toString()}
              currentSourceId={currentSource.id}
            />
          </div>
        )
      }
      <PlayMediaCard
        cast={result.credits.cast}
        genres={result.genres}
        image={result.poster_path}
        overview={result.overview}
        rating={result.vote_average}
        releaseDate={result.media_type === 'tv'
          ? result.first_air_date
          : result.release_date}
        title={mediaCardTitle}
      />
      <div role='separator' class='h-[1px] w-full bg-white/20 sm:!my-16'></div>
      {
        result.recommendations.results.length > 0 && (
          <MediaGrid
            media={media}
            title='You might also Like'
            class='!p-0 sm:!p-0 [&_h2]:font-normal'
            results={result.recommendations.results}
          />
        )
      }
    </div>
  </div>
</Layout>

<script is:inline data-astro-rerun define:vars={{ mediaDetails }}>
  function handler() {
    let search = new URLSearchParams(window.location.search)
    mediaDetails.season = Number(search.get('season')) || 1
    mediaDetails.episode = Number(search.get('episode')) || 1
    fetch('/api/watching', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json;charset=UTF-8',
      },
      body: JSON.stringify(mediaDetails),
    })
  }

  window.clear =
    window.clear ||
    function clear() {
      clearInterval(window.watchingTimeout)
    }

  if (window.watchingTimeout) {
    window.clear()
  }

  window.watchingTimeout = setInterval(handler, 1000 * 60 * 5)
  document.removeEventListener('astro:after-swap', window.clear)
  document.addEventListener('astro:after-swap', window.clear)
</script>

---
import { ChevronLeft, ChevronRight } from 'lucide-astro'
import MediaCard from './MediaCard.astro'
import type {
  MovieWithMediaType,
  PersonWithMediaType,
  TVWithMediaType,
} from 'tmdb-ts'

export interface Props {
  id: string
  title: string
  results: Array<TVWithMediaType | MovieWithMediaType | PersonWithMediaType>
}

const { id, results, title } = Astro.props
---

<div id={id} class='flex w-full flex-col gap-6 p-4 sm:px-12'>
  <div
    class='z-10 flex w-full items-center gap-2 py-1 text-lg font-medium tracking-wide text-white md:text-2xl'
  >
    <div class='flex size-6 items-center justify-center rounded bg-primary-500'>
      <slot name='icon' />
    </div>
    <p>{title}</p>
  </div>
  <div class='relative flex items-center'>
    <button
      class='swiper-button swiper-left absolute -left-12 z-20 flex size-12 items-center justify-center text-white'
    >
      <ChevronLeft />
    </button>
    <button
      id='swiper-right'
      class='swiper-button swiper-right absolute -right-12 z-20 flex size-12 items-center justify-center text-white'
    >
      <ChevronRight />
    </button>
    <div
      class='swiper relative z-10 flex w-full gap-4 overflow-auto rounded-2xl scrollbar-hide'
    >
      {
        results.map(movie =>
          movie.media_type !== 'person' ? (
            <MediaCard
              media={movie.media_type}
              id={movie.id}
              rating={movie.vote_average}
              image={movie.backdrop_path}
              language={movie.original_language}
              releaseDate={
                movie.media_type === 'movie'
                  ? movie.release_date
                  : movie.first_air_date
              }
              title={movie.media_type === 'movie' ? movie.title : movie.name}
            />
          ) : null
        )
      }
    </div>
  </div>
</div>
